=Module <<a_api_type | module Html_f >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Html_f>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Html_f >><<span class="ocsforge_color_keyword"|end>>>>~Typesafe constructors for ~H~T~M~L documents ~(~Functorial interface~)


    See <<a_manual chapter="functors"|the manual of the functorial interface>>. 

----
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="Make" | module Html_f.Make >> <<span class="ocsforge_color_delimiter"|(>>Xml <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Xml_sigs.T" | module Xml_sigs.T >>>><<span class="odocwiki_type"|     with type ('a, 'b) W.ft = 'a -> 'b>><<span class="ocsforge_color_delimiter"|)>> \\   <<span class="ocsforge_color_delimiter"|(>>Svg <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Svg_sigs.T" | module Svg_sigs.T >>>><<span class="odocwiki_type"|     with module Xml := Xml>><<span class="ocsforge_color_delimiter"|)>> : \\  \\  <<span class="odocwiki_type"|<<a_api text="Html_sigs.Make" | module Html_sigs.Make >>(Xml)(Svg).T>><<span class="odocwiki_type"| \\    with type +'a elt = Xml.elt\\     and type +'a attrib = Xml.attrib>>>><<div class="odocwiki_info"|~Create a new implementation of <<span class="odocwiki_inlinecode"|~H~T~M~L>>~, using the given underlying <<span class="odocwiki_inlinecode"|~Xml>>
    and <<span class="odocwiki_inlinecode"|~Svg>> implementation~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="Wrapped_functions" | module Html_f.Wrapped_functions >> <<span class="ocsforge_color_delimiter"|(>>Xml <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Xml_sigs.T" | module Xml_sigs.T >>>><<span class="odocwiki_type"|     with type ('a, 'b) W.ft = 'a -> 'b>><<span class="ocsforge_color_delimiter"|)>> : \\  <<span class="odocwiki_type"|<<a_api text="Html_sigs.Wrapped_functions" | module Html_sigs.Wrapped_functions >>>><<span class="odocwiki_type"|  with module Xml = Xml>>>><<div class="odocwiki_info"|~The standard set of wrapped functions~, when <<span class="odocwiki_inlinecode"|~W~.ft>> is the regular function~.
>>
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<a_api text="Make_with_wrapped_functions" | module Html_f.Make_with_wrapped_functions >> <<span class="ocsforge_color_delimiter"|(>>Xml <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Xml_sigs.T" | module Xml_sigs.T >>>><<span class="ocsforge_color_delimiter"|)>> \\   <<span class="ocsforge_color_delimiter"|(>>C <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Html_sigs.Wrapped_functions" | module Html_sigs.Wrapped_functions >>>><<span class="odocwiki_type"|     with module Xml = Xml>><<span class="ocsforge_color_delimiter"|)>> \\   <<span class="ocsforge_color_delimiter"|(>>Svg <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|<<a_api text="Svg_sigs.T" | module Svg_sigs.T >>>><<span class="odocwiki_type"|     with module Xml := Xml>><<span class="ocsforge_color_delimiter"|)>> : \\  \\  <<span class="odocwiki_type"|<<a_api text="Html_sigs.Make" | module Html_sigs.Make >>(Xml)(Svg).T>><<span class="odocwiki_type"| \\    with type +'a elt = Xml.elt\\     and type +'a attrib = Xml.attrib>>>><<div class="odocwiki_info"|~Similar to <<a_api | module Html_f.Make >> but with a custom set of wrapped functions~.
>>
