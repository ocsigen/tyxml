=Module type <<a_api_type | module type Xml_sigs.Typed_pp >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module type>> <<span class="ocsforge_color_uid"|Typed_pp>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module type Xml_sigs.Typed_pp >><<span class="ocsforge_color_keyword"|end>>>>
----
<<pre class="ocsforge_color odocwiki_code" id="TYPEelt"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_type"|'a>> <<span class="odocwiki_name"|elt>>>><<pre class="ocsforge_color odocwiki_code" id="TYPEdoc"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|doc>>>><<pre id="VALpp_elt" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|pp~_elt>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?encode: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?indent: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Stdlib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Format>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|formatter>> <<span class="ocsforge_color_delimiter"| -> >> 'a <<a_api text="elt" | type Xml_sigs.Typed_pp.elt >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pp~_elt ~(~)>> is a <<span class="odocwiki_inlinecode"|~Format>> printer for individual elements~.


    ~A custom encoding function can be provided with the <<span class="odocwiki_inlinecode"|~~encode>> argument~.
    ~Various implementations of <<span class="odocwiki_inlinecode"|encode>> are available in <<a_api | module Xml_print >>~.
>>
<<pre id="VALpp" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|pp>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|\\  <<span class="ocsforge_color_label"| ?encode: >><<span class="ocsforge_color_delimiter"| ( >>string <<span class="ocsforge_color_delimiter"| -> >> string<<span class="ocsforge_color_delimiter"| ) >> <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?indent: >>bool <<span class="ocsforge_color_delimiter"| -> >>\\  <<span class="ocsforge_color_label"| ?advert: >>string <<span class="ocsforge_color_delimiter"| -> >>\\  unit <<span class="ocsforge_color_delimiter"| -> >> <<span class="ocsforge_color_uid"|Stdlib>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_uid"|Format>><<span class="ocsforge_color_delimiter"| . >><<span class="ocsforge_color_lid"|formatter>> <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="doc" | type Xml_sigs.Typed_pp.doc >> <<span class="ocsforge_color_delimiter"| -> >> unit>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|pp ~(~)>> is a <<span class="odocwiki_inlinecode"|~Format>> printer for complete documents~.


    ~It can be used in combination with <<span class="odocwiki_inlinecode"|"~%a">>~. ~For example~, to get a string~:
    
<<code language='ocaml'|let s = Format.asprintf "%a" (pp ()) my_document>>



    ~A custom encoding function can be provided with the <<span class="odocwiki_inlinecode"|~~encode>> argument~.
    ~Various implementations of <<span class="odocwiki_inlinecode"|encode>> are available in <<a_api | module Xml_print >>~.
>>
