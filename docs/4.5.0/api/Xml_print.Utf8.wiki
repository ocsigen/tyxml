=Module <<a_api_type | module Xml_print.Utf8 >> =
<<pre class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|module>> <<span class="ocsforge_color_uid"|<<span class="ocsforge_color_uid"|Utf8>>>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="ocsforge_color_keyword"|sig>><<a_api text=".." | module Xml_print.Utf8 >><<span class="ocsforge_color_keyword"|end>>>>~Utf~8 normalizer and encoder for ~H~T~M~L~.


~Given a <<span class="odocwiki_inlinecode"|pp>> function produced by one of the functors in <<a_api | module Xml_print >>~, this modules is used as following~:
  
<<code language='ocaml'|    let encode x = fst (Xml_print.Utf8.normalize_html x) in
    Format.printf "%a" (Html.pp ~encode ()) document
  >>


----
<<pre class="ocsforge_color odocwiki_code" id="TYPEutf8"|<<span class="ocsforge_color_keyword"|type>> <<span class="odocwiki_name"|utf~8>> <<span class="ocsforge_color_delimiter"|~=>> <<span class="odocwiki_type"|string>> >><<pre id="VALnormalize" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|normalize>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="utf8" | type Xml_print.Utf8.utf8 >> * bool>>>><<div class="odocwiki_info"|<<span class="odocwiki_inlinecode"|normalize str>> take a possibly invalid utf~-~8 string
      and return a valid utf~-~8 string
      where invalid bytes have been replaced by
      the replacement character <<span class="odocwiki_inlinecode"|~U~+~F~F~F~D>>~.
      ~The returned boolean is true if invalid bytes were found
>>
<<pre id="VALnormalize_html" class="ocsforge_color odocwiki_code"|<<span class="ocsforge_color_keyword"|val>> <<span class="odocwiki_name"|normalize~_html>> <<span class="ocsforge_color_delimiter"|~:>> <<span class="odocwiki_type"|string <<span class="ocsforge_color_delimiter"| -> >> <<a_api text="utf8" | type Xml_print.Utf8.utf8 >> * bool>>>><<div class="odocwiki_info"|~Same as <<span class="odocwiki_inlinecode"|normalize>> plus some extra work ~:
      ~It encode ~'~<~' ~, ~'~>~' ~, ~'"~' ~, ~'~&~' characters with
      corresponding entities and replaced invalid html
      character by <<span class="odocwiki_inlinecode"|~U~+~F~F~F~D>>
>>
